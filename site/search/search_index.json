{
    "docs": [
        {
            "location": "/",
            "text": "d-gitea\n\n\nDocker files for running gitea\n\n\ngitea with docker - documentation\n\n\nTable of Contents\n\n\n\n\nsecrets\n\n\ncontainer directory structure\n\n\nfiles mounted into container\n\n\nusing the \ndocker-compose.yml\n file\n\n\nconfiguring gitea with \napp.ini\n\n\ncustomizing gitea with custom files\n\n\nbacking up and restoring gitea\n\n\n\n\nSecrets\n\n\nThere are two secrets to set in the \napp.ini\n before running gitea:\nthe internal token and the secret key.\n\n\nThese can be set in \n*.secret\n files:\n\n\ninternal_token.secret\nsecret_key.secret\n\n\n\n\nThe contents should be the value of the variable \nyou wish to use in \ncustom/conf/app.ini\n.\n\n\nThese files are not tracked by git.\n\n\nContainer Directory Structure\n\n\nThe \ncustom/\n dir in this folder maps to the \n/data/gitea\n volume\ninside the gitea container.\n\n\nFor example, the \napp.ini\n configuration file will be mapped into \nthe container at \n/data/gitea/conf/app.ini\n.\n\n\nContainer Data Volume\n\n\nThis container expects to use a docker data volume \nto store the gitea custom configuration \nand the entire contents of all repositories.\n\n\nOn the host machine, you can access named data volumes at \n\n/var/lib/docker/volumes/gitea_gitea/_data\n\nor copy files in and out of the container using \ndocker cp\n.\n\n\ndirectory structure before adding repos to gitea\n\n\nDirectory structure for host-mounted gitea directory\nbefore any repositorieshave been added to gitea:\n\n\ngitea\n\u251c\u2500\u2500 git\n\u2502   \u2514\u2500\u2500 repositories\n\u251c\u2500\u2500 gitea\n\u2502   \u251c\u2500\u2500 conf\n\u2502   \u2502   \u2514\u2500\u2500 app.ini\n\u2502   \u251c\u2500\u2500 gitea.db\n\u2502   \u251c\u2500\u2500 indexers\n\u2502   \u2502   \u2514\u2500\u2500 issues.bleve\n\u2502   \u2502       \u251c\u2500\u2500 index_meta.json\n\u2502   \u2502       \u2514\u2500\u2500 store\n\u2502   \u251c\u2500\u2500 lfs\n\u2502   \u251c\u2500\u2500 log\n\u2502   \u2502   \u251c\u2500\u2500 gitea.log\n\u2502   \u2502   \u251c\u2500\u2500 http.log\n\u2502   \u2502   \u2514\u2500\u2500 xorm.log\n\u2502   \u2514\u2500\u2500 sessions\n\u2502       \u2514\u2500\u2500 oauth2\n\u2514\u2500\u2500 ssh [error opening dir]\n\n11 directories, 7 files\n\n\n\n\ndirectory structure after adding repos to gitea\n\n\nAfter adding a repository:\n\n\ngitea\n\u251c\u2500\u2500 git\n\u2502   \u2514\u2500\u2500 repositories\n\u2502       \u2514\u2500e charlesreid1\n\u2502           \u2514\u2500\u2500 oieruoweiur.git\n\u2502               \u251c\u2500\u2500 branches\n\u2502               \u251c\u2500\u2500 config\n\u2502               \u251c\u2500\u2500 description\n\u2502               \u251c\u2500\u2500 HEAD\n\u2502               \u251c\u2500\u2500 hooks\n\u2502               \u2502   \u251c\u2500\u2500 applypatch-msg.sample\n\u2502               \u2502   \u251c\u2500\u2500 commit-msg.sample\n\u2502               \u2502   \u251c\u2500\u2500 post-receive\n\u2502               \u2502   \u251c\u2500\u2500 post-receive.d\n\u2502               \u2502   \u2502   \u2514\u2500\u2500 gitea\n\u2502               \u2502   \u251c\u2500\u2500 post-update.sample\n\u2502               \u2502   \u251c\u2500\u2500 pre-applypatch.sample\n\u2502               \u2502   \u251c\u2500\u2500 pre-commit.sample\n\u2502               \u2502   \u251c\u2500\u2500 prepare-commit-msg.sample\n\u2502               \u2502   \u251c\u2500\u2500 pre-push.sample\n\u2502               \u2502   \u251c\u2500\u2500 pre-rebase.sample\n\u2502               \u2502   \u251c\u2500\u2500 pre-receive\n\u2502               \u2502   \u251c\u2500\u2500 pre-receive.d\n\u2502               \u2502   \u2502   \u2514\u2500\u2500 gitea\n\u2502               \u2502   \u251c\u2500\u2500 pre-receive.sample\n\u2502               \u2502   \u251c\u2500\u2500 update\n\u2502               \u2502   \u251c\u2500\u2500 update.d\n\u2502               \u2502   \u2502   \u2514\u2500\u2500 gitea\n\u2502               \u2502   \u2514\u2500\u2500 update.sample\n\u2502               \u251c\u2500\u2500 info\n\u2502               \u2502   \u251c\u2500\u2500 exclude\n\u2502               \u2502   \u2514\u2500\u2500 refs\n\u2502               \u251c\u2500\u2500 objects\n\u2502               \u2502   \u251c\u2500\u2500 info\n\u2502               \u2502   \u2502   \u2514\u2500\u2500 packs\n\u2502               \u2502   \u2514\u2500\u2500 pack\n\u2502               \u2514\u2500\u2500 refs\n\u2502                   \u251c\u2500\u2500 heads\n\u2502                   \u2514\u2500\u2500 tags\n\u251c\u2500\u2500 gitea\n\u2502   \u251c\u2500\u2500 conf\n\u2502   \u2502   \u2514\u2500\u2500 app.ini\n\u2502   \u251c\u2500\u2500 gitea.db\n\u2502   \u251c\u2500\u2500 indexers\n\u2502   \u2502   \u2514\u2500\u2500 issues.bleve\n\u2502   \u2502       \u251c\u2500\u2500 index_meta.json\n\u2502   \u2502       \u2514\u2500\u2500 store\n\u2502   \u251c\u2500\u2500 lfs\n\u2502   \u251c\u2500\u2500 log\n\u2502   \u2502   \u251c\u2500\u2500 gitea.log\n\u2502   \u2502   \u251c\u2500\u2500 http.log\n\u2502   \u2502   \u2514\u2500\u2500 xorm.log\n\u2502   \u2514\u2500\u2500 sessions\n\u2502       \u2514\u2500\u2500 oauth2\n\u2514\u2500\u2500 ssh [error opening dir]\n\n25 directories, 29 files\n\n\n\n\nFiles Mounted Into Container\n\n\ncustom/conf\n configuration file\n\n\nThe conf dir contains configuration files to configure how gitea works.\n\n\nThe \napp.ini\n file needs to contain two secrets,\nwhich are scrubbed in \napp.ini.sample\n.\n\n\nThe two secrets that are needed are:\n\n\n\n\nan \"internal token\" secret, contained in \ninternal_token.secret\n\n\na \"secret key\" secret, contained in \nsecret_key.secret\n\n\n\n\nUse the \nmake_app_ini.sh\n script to add the two secrets to the document.\nThis will use sed to find/replace instances of the scrubbed secret,\nand will output the result to \ncustom/conf/app.ini\n.\n\n\n./make_app_ini.sh\n\n\n\n\nThis generates \ncustom/conf/app.ini\n.\n\n\nWhen the container is run, this file will be at \n/data/gitea/conf/app.ini\n.\n\n\ncustom/templates\n template files\n\n\nThe templates directory contains template files. These are gitea templates that \ncontrol how particular kinds of gitea pages look. For example, a template can\nbe used to modify how the user page looks, or modify the layout of repository\nmain pages.\n\n\nIn the container, this will be at \n/data/gitea/templates/\n.\n\n\ncustom/pages\n gitea pages\n\n\nThe pages directory contains one-off pages or static content that is \nhosted by gitea at the same domain (git.charlesreid1.com) but \nnot necessarily incorporated into the gitea site.\n\n\nFor example, a custom \"about me\" page could be added as a static .html file,\nand it would be hosted at \ngit.charlesreid1.com/about\n.\n\n\nIn the container, this will be at \n/data/gitea/pages/\n.\n\n\nUsing the \ndocker-compose.yml\n File\n\n\nThis directory contains a docker-compose file that can be used to run \na gitea server on port 3000.\n\n\nTo get the gitea container up and running, \n\n\n$ docker-compose up\n\n\n\n\nNow visit \n<server-ip>:3000\n. You will be presented with a configuration page.\nSet up the gitea instance. This will automatically populate the directory \nstructure. See below for more info.\n\n\nUse this as a project seed to add gitea containers to other docker pods.\n\n\nNotes on Custom Files\n\n\nThe settings in the app.ini file are documented \nhere\n.\n\n\nAn extensive sample app.ini file is \nhere\n (WARNING: this broke gitea).\n\n\nThe existing gitea templates are in the gitea repo under \ntemplates/\n.\nThese can be modified as needed and placed in the \ncustom/templates/\n directory.\n\n\nBacking Up and Restoring Gitea\n\n\nFortunately, gitea provides dump functionality.\n\n\nUnfortunately, there is no restore functionality.\n\n\nSee \npod-charlesreid1/utils-gitea\n\nfor proper backup/restore scripts.\n\n\nExecutive Summary\n\n\nBackup:\n\n create a backup target directory in the container\n\n create a gitea dump zip file using \ngitea dump\n command\n\n create a gitea avatars zip file\n\n copy everything in the backup target directory out of the container\n* remove the backup target directory\n\n\nRestore:\n\n create a restore target directory in the container\n\n copy gitea dump and gitea avatars zip files into restore target dir\n\n unpack dump zip, unpack avatars zip\n\n unzip repositories zip (contained in dump zip)\n\n restore \nrepositories/\n folder to \n/data/git/repositories/\n\n\n (skip restoring \ncustom/\n files, version control takes care of that)\n\n restore sqlite database using sql database dump\n\n restore avatars\n* remove the restore target directory",
            "title": "Home"
        },
        {
            "location": "/#d-gitea",
            "text": "Docker files for running gitea  gitea with docker - documentation",
            "title": "d-gitea"
        },
        {
            "location": "/#table-of-contents",
            "text": "secrets  container directory structure  files mounted into container  using the  docker-compose.yml  file  configuring gitea with  app.ini  customizing gitea with custom files  backing up and restoring gitea",
            "title": "Table of Contents"
        },
        {
            "location": "/#secrets",
            "text": "There are two secrets to set in the  app.ini  before running gitea:\nthe internal token and the secret key.  These can be set in  *.secret  files:  internal_token.secret\nsecret_key.secret  The contents should be the value of the variable \nyou wish to use in  custom/conf/app.ini .  These files are not tracked by git.",
            "title": "Secrets"
        },
        {
            "location": "/#container-directory-structure",
            "text": "The  custom/  dir in this folder maps to the  /data/gitea  volume\ninside the gitea container.  For example, the  app.ini  configuration file will be mapped into \nthe container at  /data/gitea/conf/app.ini .",
            "title": "Container Directory Structure"
        },
        {
            "location": "/#container-data-volume",
            "text": "This container expects to use a docker data volume \nto store the gitea custom configuration \nand the entire contents of all repositories.  On the host machine, you can access named data volumes at  /var/lib/docker/volumes/gitea_gitea/_data \nor copy files in and out of the container using  docker cp .",
            "title": "Container Data Volume"
        },
        {
            "location": "/#directory-structure-before-adding-repos-to-gitea",
            "text": "Directory structure for host-mounted gitea directory\nbefore any repositorieshave been added to gitea:  gitea\n\u251c\u2500\u2500 git\n\u2502   \u2514\u2500\u2500 repositories\n\u251c\u2500\u2500 gitea\n\u2502   \u251c\u2500\u2500 conf\n\u2502   \u2502   \u2514\u2500\u2500 app.ini\n\u2502   \u251c\u2500\u2500 gitea.db\n\u2502   \u251c\u2500\u2500 indexers\n\u2502   \u2502   \u2514\u2500\u2500 issues.bleve\n\u2502   \u2502       \u251c\u2500\u2500 index_meta.json\n\u2502   \u2502       \u2514\u2500\u2500 store\n\u2502   \u251c\u2500\u2500 lfs\n\u2502   \u251c\u2500\u2500 log\n\u2502   \u2502   \u251c\u2500\u2500 gitea.log\n\u2502   \u2502   \u251c\u2500\u2500 http.log\n\u2502   \u2502   \u2514\u2500\u2500 xorm.log\n\u2502   \u2514\u2500\u2500 sessions\n\u2502       \u2514\u2500\u2500 oauth2\n\u2514\u2500\u2500 ssh [error opening dir]\n\n11 directories, 7 files",
            "title": "directory structure before adding repos to gitea"
        },
        {
            "location": "/#directory-structure-after-adding-repos-to-gitea",
            "text": "After adding a repository:  gitea\n\u251c\u2500\u2500 git\n\u2502   \u2514\u2500\u2500 repositories\n\u2502       \u2514\u2500e charlesreid1\n\u2502           \u2514\u2500\u2500 oieruoweiur.git\n\u2502               \u251c\u2500\u2500 branches\n\u2502               \u251c\u2500\u2500 config\n\u2502               \u251c\u2500\u2500 description\n\u2502               \u251c\u2500\u2500 HEAD\n\u2502               \u251c\u2500\u2500 hooks\n\u2502               \u2502   \u251c\u2500\u2500 applypatch-msg.sample\n\u2502               \u2502   \u251c\u2500\u2500 commit-msg.sample\n\u2502               \u2502   \u251c\u2500\u2500 post-receive\n\u2502               \u2502   \u251c\u2500\u2500 post-receive.d\n\u2502               \u2502   \u2502   \u2514\u2500\u2500 gitea\n\u2502               \u2502   \u251c\u2500\u2500 post-update.sample\n\u2502               \u2502   \u251c\u2500\u2500 pre-applypatch.sample\n\u2502               \u2502   \u251c\u2500\u2500 pre-commit.sample\n\u2502               \u2502   \u251c\u2500\u2500 prepare-commit-msg.sample\n\u2502               \u2502   \u251c\u2500\u2500 pre-push.sample\n\u2502               \u2502   \u251c\u2500\u2500 pre-rebase.sample\n\u2502               \u2502   \u251c\u2500\u2500 pre-receive\n\u2502               \u2502   \u251c\u2500\u2500 pre-receive.d\n\u2502               \u2502   \u2502   \u2514\u2500\u2500 gitea\n\u2502               \u2502   \u251c\u2500\u2500 pre-receive.sample\n\u2502               \u2502   \u251c\u2500\u2500 update\n\u2502               \u2502   \u251c\u2500\u2500 update.d\n\u2502               \u2502   \u2502   \u2514\u2500\u2500 gitea\n\u2502               \u2502   \u2514\u2500\u2500 update.sample\n\u2502               \u251c\u2500\u2500 info\n\u2502               \u2502   \u251c\u2500\u2500 exclude\n\u2502               \u2502   \u2514\u2500\u2500 refs\n\u2502               \u251c\u2500\u2500 objects\n\u2502               \u2502   \u251c\u2500\u2500 info\n\u2502               \u2502   \u2502   \u2514\u2500\u2500 packs\n\u2502               \u2502   \u2514\u2500\u2500 pack\n\u2502               \u2514\u2500\u2500 refs\n\u2502                   \u251c\u2500\u2500 heads\n\u2502                   \u2514\u2500\u2500 tags\n\u251c\u2500\u2500 gitea\n\u2502   \u251c\u2500\u2500 conf\n\u2502   \u2502   \u2514\u2500\u2500 app.ini\n\u2502   \u251c\u2500\u2500 gitea.db\n\u2502   \u251c\u2500\u2500 indexers\n\u2502   \u2502   \u2514\u2500\u2500 issues.bleve\n\u2502   \u2502       \u251c\u2500\u2500 index_meta.json\n\u2502   \u2502       \u2514\u2500\u2500 store\n\u2502   \u251c\u2500\u2500 lfs\n\u2502   \u251c\u2500\u2500 log\n\u2502   \u2502   \u251c\u2500\u2500 gitea.log\n\u2502   \u2502   \u251c\u2500\u2500 http.log\n\u2502   \u2502   \u2514\u2500\u2500 xorm.log\n\u2502   \u2514\u2500\u2500 sessions\n\u2502       \u2514\u2500\u2500 oauth2\n\u2514\u2500\u2500 ssh [error opening dir]\n\n25 directories, 29 files",
            "title": "directory structure after adding repos to gitea"
        },
        {
            "location": "/#files-mounted-into-container",
            "text": "",
            "title": "Files Mounted Into Container"
        },
        {
            "location": "/#customconf-configuration-file",
            "text": "The conf dir contains configuration files to configure how gitea works.  The  app.ini  file needs to contain two secrets,\nwhich are scrubbed in  app.ini.sample .  The two secrets that are needed are:   an \"internal token\" secret, contained in  internal_token.secret  a \"secret key\" secret, contained in  secret_key.secret   Use the  make_app_ini.sh  script to add the two secrets to the document.\nThis will use sed to find/replace instances of the scrubbed secret,\nand will output the result to  custom/conf/app.ini .  ./make_app_ini.sh  This generates  custom/conf/app.ini .  When the container is run, this file will be at  /data/gitea/conf/app.ini .",
            "title": "custom/conf configuration file"
        },
        {
            "location": "/#customtemplates-template-files",
            "text": "The templates directory contains template files. These are gitea templates that \ncontrol how particular kinds of gitea pages look. For example, a template can\nbe used to modify how the user page looks, or modify the layout of repository\nmain pages.  In the container, this will be at  /data/gitea/templates/ .",
            "title": "custom/templates template files"
        },
        {
            "location": "/#custompages-gitea-pages",
            "text": "The pages directory contains one-off pages or static content that is \nhosted by gitea at the same domain (git.charlesreid1.com) but \nnot necessarily incorporated into the gitea site.  For example, a custom \"about me\" page could be added as a static .html file,\nand it would be hosted at  git.charlesreid1.com/about .  In the container, this will be at  /data/gitea/pages/ .",
            "title": "custom/pages gitea pages"
        },
        {
            "location": "/#using-the-docker-composeyml-file",
            "text": "This directory contains a docker-compose file that can be used to run \na gitea server on port 3000.  To get the gitea container up and running,   $ docker-compose up  Now visit  <server-ip>:3000 . You will be presented with a configuration page.\nSet up the gitea instance. This will automatically populate the directory \nstructure. See below for more info.  Use this as a project seed to add gitea containers to other docker pods.",
            "title": "Using the docker-compose.yml File"
        },
        {
            "location": "/#notes-on-custom-files",
            "text": "The settings in the app.ini file are documented  here .  An extensive sample app.ini file is  here  (WARNING: this broke gitea).  The existing gitea templates are in the gitea repo under  templates/ .\nThese can be modified as needed and placed in the  custom/templates/  directory.",
            "title": "Notes on Custom Files"
        },
        {
            "location": "/#backing-up-and-restoring-gitea",
            "text": "Fortunately, gitea provides dump functionality.  Unfortunately, there is no restore functionality.  See  pod-charlesreid1/utils-gitea \nfor proper backup/restore scripts.",
            "title": "Backing Up and Restoring Gitea"
        },
        {
            "location": "/#executive-summary",
            "text": "Backup:  create a backup target directory in the container  create a gitea dump zip file using  gitea dump  command  create a gitea avatars zip file  copy everything in the backup target directory out of the container\n* remove the backup target directory  Restore:  create a restore target directory in the container  copy gitea dump and gitea avatars zip files into restore target dir  unpack dump zip, unpack avatars zip  unzip repositories zip (contained in dump zip)  restore  repositories/  folder to  /data/git/repositories/   (skip restoring  custom/  files, version control takes care of that)  restore sqlite database using sql database dump  restore avatars\n* remove the restore target directory",
            "title": "Executive Summary"
        }
    ]
}